# Parameter file for optimization.

[WIRE]
# Scattering region geometry 
# Number of sites
N = 400 
# Number of sites without superconductivity within the scattering region.
# In order to allow for barriers (see below), nL and nR >= 1 is expected.
nL = 1
nR = 1

# Hamiltonian parameters
t = 1
delta = 0.0225
texture energies = 0.0
uniform field = [0.027, 0, 0]
alpha = 0.05

# Chemical potentials
mu sc = 0.0
mu normal region = 0.0
mu lead = 1.9

# Barriers:
# Scaling of the hopping between the normal and superconducting regions.
gamma_L = 1
gamma_R = 1

[OPTIMIZATION]
#####################
# Magnetic texture options:
optMagneticTextures theta = False
optMagneticTextures phi = False

#####################
# Electrostatic potential options:
# We consider two types of optimization:
# 1) Uniform gates :
# -> Consider the chemical potential in the superconducting region as a single 
#    uniform parameter (optMuSc).
# 	 We can consider a single parameter for the chemical potential in the normal
#    regions between the sc and the leads  (optMuN)
# 2) Real-space profile of the electrostatic potential (optMuProfile).
#
# mu_scaling: Relative weight of the chemical potential to other 
# parameters in the optimization.
# mu_min and mu_max are bounds on the optimization.

optMuN = False
optMuSc = False

optMuProfile = True
mu_min = -0.3
mu_max = 0.3
mu_scaling = 1e-3

# Period of the potential profile.
mu_period = 10

#####################
# Superconducting gap profile options:
optDelta = False
delta_period = 10
delta_scaling = 1
delta_min = 0
delta_max = 0.03

#####################
# Smoothing penalty:
calculatePenalty = True
penalty_weight = 0.1
scale_penalty_by_chain_length = False

# Small shift from zero-energy to improve RGF stability
E0 = [0,1e-6]

# Use the basin hopping algorithm?
# See scipy's documentation.
basinhopping optimization = False

[OPTIMIZER]
# Parameters specific to the gradient descent optimizer.
# See the documentation of scipy's bfgs optimizer.
iprint = 1
disp = True
maxiter = 1000
ftol = 1e-6

# Parameters in the case of basin hopping optimization.
# See scipy documentation for details.
bh stepsize = 1
bh interval = 2
bh display = True
bh nb iterations=100

[TEXTURE 0]
# No importance, the texture as no amplitude
initType = spiral
period = 100
phase = 0.

[CALLBACK]
out_folder = results
diag_obc = False

print conductance = False
print dos = False
print ldos = False
verbose = False
basin hopping verbose = False

# Energy span of conductance calcualtion
conductance_energy_span = [0,1.2,201,1e-8]


[TASK]
finite difference = False
exact function OBC = False
exact function PBC = False
rgf_grad_naive = False
rgf_grad_v1 = False
